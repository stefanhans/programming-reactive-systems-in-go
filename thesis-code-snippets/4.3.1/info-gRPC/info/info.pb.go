// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat-message.proto

package info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Info struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_0a28442b70c4c2e3, []int{0}
}
func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (dst *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(dst, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Info) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type InfoList struct {
	Infos                []*Info  `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoList) Reset()         { *m = InfoList{} }
func (m *InfoList) String() string { return proto.CompactTextString(m) }
func (*InfoList) ProtoMessage()    {}
func (*InfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_0a28442b70c4c2e3, []int{1}
}
func (m *InfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoList.Unmarshal(m, b)
}
func (m *InfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoList.Marshal(b, m, deterministic)
}
func (dst *InfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoList.Merge(dst, src)
}
func (m *InfoList) XXX_Size() int {
	return xxx_messageInfo_InfoList.Size(m)
}
func (m *InfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoList.DiscardUnknown(m)
}

var xxx_messageInfo_InfoList proto.InternalMessageInfo

func (m *InfoList) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_0a28442b70c4c2e3, []int{2}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (dst *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(dst, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Info)(nil), "info.Info")
	proto.RegisterType((*InfoList)(nil), "info.InfoList")
	proto.RegisterType((*Void)(nil), "info.Void")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InfosClient is the client API for Infos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfosClient interface {
	Read(ctx context.Context, in *Void, opts ...grpc.CallOption) (*InfoList, error)
	Write(ctx context.Context, in *Info, opts ...grpc.CallOption) (*Info, error)
}

type infosClient struct {
	cc *grpc.ClientConn
}

func NewInfosClient(cc *grpc.ClientConn) InfosClient {
	return &infosClient{cc}
}

func (c *infosClient) Read(ctx context.Context, in *Void, opts ...grpc.CallOption) (*InfoList, error) {
	out := new(InfoList)
	err := c.cc.Invoke(ctx, "/info.Infos/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infosClient) Write(ctx context.Context, in *Info, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/info.Infos/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfosServer is the server API for Infos service.
type InfosServer interface {
	Read(context.Context, *Void) (*InfoList, error)
	Write(context.Context, *Info) (*Info, error)
}

func RegisterInfosServer(s *grpc.Server, srv InfosServer) {
	s.RegisterService(&_Infos_serviceDesc, srv)
}

func _Infos_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfosServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info.Infos/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfosServer).Read(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Infos_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Info)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfosServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info.Infos/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfosServer).Write(ctx, req.(*Info))
	}
	return interceptor(ctx, in, info, handler)
}

var _Infos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "info.Infos",
	HandlerType: (*InfosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Infos_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Infos_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat-message.proto",
}

func init() { proto.RegisterFile("chat-message.proto", fileDescriptor_info_0a28442b70c4c2e3) }

var fileDescriptor_info_0a28442b70c4c2e3 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xcc, 0x4b, 0xcb,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xf4, 0xb8, 0x58, 0x3c, 0xf3,
	0xd2, 0xf2, 0x85, 0x84, 0xb8, 0x58, 0x4a, 0x52, 0x2b, 0x4a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0xc0, 0x6c, 0x90, 0x58, 0x5a, 0x51, 0x7e, 0xae, 0x04, 0x13, 0x44, 0x0c, 0xc4, 0x56, 0xd2,
	0xe1, 0xe2, 0x00, 0xa9, 0xf7, 0xc9, 0x2c, 0x2e, 0x11, 0x52, 0xe0, 0x62, 0x05, 0x99, 0x51, 0x2c,
	0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0xc4, 0xa5, 0x07, 0x36, 0x1d, 0x24, 0x1d, 0x04, 0x91, 0x50,
	0x62, 0xe3, 0x62, 0x09, 0xcb, 0xcf, 0x4c, 0x31, 0x0a, 0xe0, 0x62, 0x05, 0x09, 0x17, 0x0b, 0xa9,
	0x70, 0xb1, 0x04, 0xa5, 0x26, 0xa6, 0x08, 0x41, 0xd5, 0x82, 0x24, 0xa5, 0xf8, 0x10, 0xfa, 0x40,
	0xc6, 0x2a, 0x31, 0x08, 0x29, 0x72, 0xb1, 0x86, 0x17, 0x65, 0x96, 0xa4, 0x0a, 0x21, 0x19, 0x29,
	0x85, 0xc4, 0x56, 0x62, 0x48, 0x62, 0x03, 0x7b, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x26,
	0x82, 0xa7, 0xcf, 0xd2, 0x00, 0x00, 0x00,
}
