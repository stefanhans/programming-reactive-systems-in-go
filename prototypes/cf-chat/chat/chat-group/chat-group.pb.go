// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat-group.proto

package chatgroup

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_MessageType int32

const (
	// messages to handle subscriptions
	Message_SUBSCRIBE_REQUEST Message_MessageType = 0
	Message_SUBSCRIBE_REPLY   Message_MessageType = 1
	// messages to handle unsubscriptions
	Message_UNSUBSCRIBE_REQUEST Message_MessageType = 2
	Message_UNSUBSCRIBE_REPLY   Message_MessageType = 3
	// messages to publish chat messages to all members
	Message_PUBLISH_REQUEST Message_MessageType = 4
	Message_PUBLISH_REPLY   Message_MessageType = 5
	// messages to test publishing chat messages
	Message_TEST_PUBLISH_REQUEST Message_MessageType = 6
	Message_TEST_PUBLISH_REPLY   Message_MessageType = 7
	// messages to test chat commands
	Message_TEST_CMD_REQUEST Message_MessageType = 8
	Message_TEST_CMD_REPLY   Message_MessageType = 9
	// messages to test a chain of message transfer in a ping like fashion
	Message_TEST_PING_REQUEST Message_MessageType = 10
	Message_TEST_PING_REPLY   Message_MessageType = 11
)

var Message_MessageType_name = map[int32]string{
	0:  "SUBSCRIBE_REQUEST",
	1:  "SUBSCRIBE_REPLY",
	2:  "UNSUBSCRIBE_REQUEST",
	3:  "UNSUBSCRIBE_REPLY",
	4:  "PUBLISH_REQUEST",
	5:  "PUBLISH_REPLY",
	6:  "TEST_PUBLISH_REQUEST",
	7:  "TEST_PUBLISH_REPLY",
	8:  "TEST_CMD_REQUEST",
	9:  "TEST_CMD_REPLY",
	10: "TEST_PING_REQUEST",
	11: "TEST_PING_REPLY",
}
var Message_MessageType_value = map[string]int32{
	"SUBSCRIBE_REQUEST":    0,
	"SUBSCRIBE_REPLY":      1,
	"UNSUBSCRIBE_REQUEST":  2,
	"UNSUBSCRIBE_REPLY":    3,
	"PUBLISH_REQUEST":      4,
	"PUBLISH_REPLY":        5,
	"TEST_PUBLISH_REQUEST": 6,
	"TEST_PUBLISH_REPLY":   7,
	"TEST_CMD_REQUEST":     8,
	"TEST_CMD_REPLY":       9,
	"TEST_PING_REQUEST":    10,
	"TEST_PING_REPLY":      11,
}

func (x Message_MessageType) String() string {
	return proto.EnumName(Message_MessageType_name, int32(x))
}
func (Message_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_group_5535c6014c620cec, []int{2, 0}
}

type Member struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	Protocol             string   `protobuf:"bytes,4,opt,name=protocol" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_group_5535c6014c620cec, []int{0}
}
func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (dst *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(dst, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Member) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Member) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Member) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type MemberList struct {
	Member               []*Member `protobuf:"bytes,1,rep,name=member" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MemberList) Reset()         { *m = MemberList{} }
func (m *MemberList) String() string { return proto.CompactTextString(m) }
func (*MemberList) ProtoMessage()    {}
func (*MemberList) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_group_5535c6014c620cec, []int{1}
}
func (m *MemberList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberList.Unmarshal(m, b)
}
func (m *MemberList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberList.Marshal(b, m, deterministic)
}
func (dst *MemberList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberList.Merge(dst, src)
}
func (m *MemberList) XXX_Size() int {
	return xxx_messageInfo_MemberList.Size(m)
}
func (m *MemberList) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberList.DiscardUnknown(m)
}

var xxx_messageInfo_MemberList proto.InternalMessageInfo

func (m *MemberList) GetMember() []*Member {
	if m != nil {
		return m.Member
	}
	return nil
}

// Services are mapped by request/reply message types
type Message struct {
	MsgType              Message_MessageType `protobuf:"varint,1,opt,name=msgType,enum=chatgroup.Message_MessageType" json:"msgType,omitempty"`
	Sender               *Member             `protobuf:"bytes,2,opt,name=sender" json:"sender,omitempty"`
	Text                 string              `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_group_5535c6014c620cec, []int{2}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMsgType() Message_MessageType {
	if m != nil {
		return m.MsgType
	}
	return Message_SUBSCRIBE_REQUEST
}

func (m *Message) GetSender() *Member {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Member)(nil), "chatgroup.Member")
	proto.RegisterType((*MemberList)(nil), "chatgroup.MemberList")
	proto.RegisterType((*Message)(nil), "chatgroup.Message")
	proto.RegisterEnum("chatgroup.Message_MessageType", Message_MessageType_name, Message_MessageType_value)
}

func init() { proto.RegisterFile("chat-group.proto", fileDescriptor_chat_group_5535c6014c620cec) }

var fileDescriptor_chat_group_5535c6014c620cec = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0x87, 0xdf, 0xb6, 0xbc, 0x05, 0x86, 0x88, 0x65, 0x40, 0xdd, 0x78, 0x30, 0xa4, 0x27, 0x3c,
	0xc8, 0x01, 0x0f, 0x7a, 0x06, 0x1b, 0x25, 0x01, 0x82, 0xfd, 0x73, 0x30, 0x31, 0x21, 0x80, 0x1b,
	0x24, 0xb1, 0x74, 0xd3, 0xd6, 0x44, 0x3f, 0x8a, 0x17, 0x3f, 0xab, 0x99, 0x5d, 0x59, 0x0b, 0x7a,
	0xea, 0xec, 0xb3, 0xcf, 0xfe, 0x66, 0x26, 0x05, 0x67, 0xf9, 0x3c, 0xcf, 0x2f, 0x56, 0x69, 0xf2,
	0x2a, 0xba, 0x22, 0x4d, 0xf2, 0x04, 0xab, 0x44, 0x24, 0x70, 0x1f, 0xc1, 0x1e, 0xf3, 0x78, 0xc1,
	0x53, 0x44, 0x28, 0x6d, 0xe6, 0x31, 0x67, 0x46, 0xdb, 0xe8, 0x54, 0x7d, 0x59, 0x63, 0x1d, 0xcc,
	0xb5, 0x60, 0xa6, 0x24, 0xe6, 0x5a, 0x90, 0x23, 0x92, 0x34, 0x67, 0x96, 0x72, 0xa8, 0xc6, 0x53,
	0xa8, 0xc8, 0xd4, 0x65, 0xf2, 0xc2, 0x4a, 0x92, 0xeb, 0xb3, 0x7b, 0x05, 0xa0, 0xd2, 0x47, 0xeb,
	0x2c, 0xc7, 0x73, 0xb0, 0x63, 0x79, 0x62, 0x46, 0xdb, 0xea, 0xd4, 0x7a, 0x8d, 0xae, 0x9e, 0xa3,
	0xab, 0x34, 0xff, 0x5b, 0x70, 0x3f, 0x2d, 0x28, 0x8f, 0x79, 0x96, 0xcd, 0x57, 0x1c, 0xaf, 0xa1,
	0x1c, 0x67, 0xab, 0xf0, 0x5d, 0xa8, 0xd9, 0xea, 0xbd, 0xb3, 0x9d, 0x77, 0x52, 0xda, 0x7e, 0xc9,
	0xf2, 0xb7, 0x3a, 0x35, 0xcc, 0xf8, 0xe6, 0x89, 0xa7, 0x72, 0x85, 0xbf, 0x1b, 0x2a, 0x81, 0x36,
	0xcb, 0xf9, 0x9b, 0xde, 0x8c, 0x6a, 0xf7, 0xc3, 0x84, 0x5a, 0x21, 0x17, 0x8f, 0xa0, 0x11, 0x44,
	0xfd, 0x60, 0xe0, 0x0f, 0xfb, 0xde, 0xcc, 0xf7, 0xee, 0x23, 0x2f, 0x08, 0x9d, 0x7f, 0xd8, 0x84,
	0xc3, 0x22, 0x9e, 0x8e, 0x1e, 0x1c, 0x03, 0x4f, 0xa0, 0x19, 0x4d, 0x7e, 0xdb, 0x26, 0x85, 0xec,
	0x5e, 0x90, 0x6f, 0x51, 0xc8, 0x34, 0xea, 0x8f, 0x86, 0xc1, 0x9d, 0x76, 0x4b, 0xd8, 0x80, 0x83,
	0x1f, 0x48, 0xde, 0x7f, 0x64, 0xd0, 0x0a, 0xbd, 0x20, 0x9c, 0xed, 0xcb, 0x36, 0x1e, 0x03, 0xee,
	0xdd, 0xd0, 0x8b, 0x32, 0xb6, 0xc0, 0x91, 0x7c, 0x30, 0xbe, 0xd1, 0x76, 0x05, 0x11, 0xea, 0x05,
	0x4a, 0x66, 0x95, 0x46, 0x53, 0x09, 0xc3, 0xc9, 0xad, 0x56, 0x81, 0x46, 0x2b, 0x62, 0x72, 0x6b,
	0x0b, 0x5b, 0xfe, 0xe3, 0xcb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x66, 0x9d, 0x64, 0x5d,
	0x02, 0x00, 0x00,
}
